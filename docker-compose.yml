version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: persistencia-poliglota-postgres
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - persistencia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: persistencia-poliglota-mongodb
    environment:
      MONGO_INITDB_DATABASE: app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - persistencia-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: persistencia-poliglota-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - persistencia-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application (opcional para desarrollo)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: persistencia-poliglota-app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: app
      DB_USER: postgres
      DB_PASS: postgres
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: app
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - persistencia-network
    profiles:
      - with-app

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  persistencia-network:
    driver: bridge
